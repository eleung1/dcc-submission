{
   "created" : 1369406457778,
   "lastUpdate" : 1370445495144,
   "files" : [
      {
         "pattern" : "^cnsm(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "mutation_id",
               "label" : "Unique identifier assigned to a single mutation observation; must be unique within the scope of all data produced by a project",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "start_probe_id",
               "label" : "Probe id containing the chromosome_start if array platform was used",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "end_probe_id",
               "label" : "Probe id containing the chromosome_end if array platform was used",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome",
               "label" : "Name of the chromosome containing the mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_start",
               "label" : "Chromosome start position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_end",
               "label" : "Chromosome end position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "chromosome_start_range",
               "label" : "Number of bases around chromosome_start that may contain the start position",
               "restrictions" : [],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "chromosome_end_range",
               "label" : "Number of bases around chromosome_end that may contain the end position",
               "restrictions" : [],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "mutation_type",
               "label" : "Type of mutation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "cnsm_p.0.mutation_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "copy_number",
               "label" : "DNA copy number estimated",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "segment_mean",
               "label" : "Mean LRR per segment",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "segment_median",
               "label" : "Median LRR per segment",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "is_annotated",
               "label" : "Indicate if the mutation/variation is annotated in dbSNP",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.is_annotated.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "cnsm_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "cnsm_p",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id",
            "mutation_id"
         ],
         "label" : "Copy Number Somatic Mutations (cnsm) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^cnsm(?:__.*)?__s(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "mutation_id",
               "label" : "Unique identifier assigned to a single mutation observation; must be unique within the scope of all data produced by a project",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "gene_affected",
               "label" : "Gene(s) containing the mutation/variation.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "transcript_affected",
               "label" : "Transcript(s) containing the mutation/variation.  Use Ensembl transcript id.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "mutation_id"
               ],
               "other" : "cnsm_p",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "mutation_id"
               ]
            }
         ],
         "name" : "cnsm_s",
         "uniqueFields" : [],
         "label" : "Copy Number Somatic Mutations (cnsm) - Secondary Analysis File (s)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^cnsm(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "matched_sample_id",
               "label" : "Unique identifier(s) for the matched sample(s) used in the analysis; must exist in the sample file; can provide a list of >1 IDs using comma (',') as a delimiter",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "variation_calling_algorithm",
               "label" : "Name of variation calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "sequencing_strategy",
               "label" : "Sequencing technique intended for the analyzed sample library.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.sequencing_strategy.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "seq_coverage",
               "label" : "Sequence coverage if analyzed by sequencing platforms",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            },
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "matched_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "cnsm_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "Copy Number Somatic Mutations (cnsm) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^exp(?:__.*)?__g(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "gene_stable_id",
               "label" : "This element has been deprecated in favor of the more flexible 'db_xref'; For providing Ensembl gene or transcript annotation use the DB Xref syntax: 'Ensembl:ENSGxxx' and please continue to populate in this field as well as in 'db_xref'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "gene_chromosome",
               "label" : "Name of the chromosome containing the above gene.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "gene_strand",
               "label" : "Strand of the chromosome",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_start",
               "label" : "Start position of the entire gene on the chromosome as annotated in Ensembl",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_end",
               "label" : "End position of the entire gene on the chromosome as annotated in Ensembl",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "normalized_read_count",
               "label" : "Normalized count of sequencing reads if analyzed by sequencing platforms",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "raw_read_count",
               "label" : "Raw count of sequencing reads if analyzed by sequencing platforms",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "normalized_expression_level",
               "label" : "Normalized expression level",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "fold_change",
               "label" : "Expressed fold change if differential expression is measured",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "reference_sample_id",
               "label" : "ID of the reference sample if differential expression is measured",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "is_annotated",
               "label" : "Indicate if the mutation/variation is annotated in dbSNP",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.is_annotated.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "probeset_id",
               "label" : "ID of the probeset used in microarray",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "exp_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "exp_g",
         "uniqueFields" : [],
         "label" : "Gene Expression (exp) - Primary Analysis File (g)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^meth(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "methylated_fragment_id",
               "label" : "A unique identifier associated with the fragment interrogated by the methylation analysis; provide platform-specific identifier if available",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome",
               "label" : "Name of the chromosome containing the mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_start",
               "label" : "Chromosome start position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_end",
               "label" : "Chromosome end position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome_strand",
               "label" : "Chromosome strand of referenced feature; use '1' for forward, '-1' for reverse",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "percent_methylation",
               "label" : "Estimate of percent methylation at interrogated site from any calculated normalized measure of the degree of methylation; express as decimal value less than or equal to 1",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "beta_value",
               "label" : "Methylation Beta value for interrogated site (if available); may duplicate value supplied for 'percent_methylation'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "meth_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "meth_p",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id",
            "methylated_fragment_id"
         ],
         "label" : "DNA Methylation (meth) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^meth(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "matched_sample_id",
               "label" : "Unique identifier(s) for the matched sample(s) used in the analysis; must exist in the sample file; can provide a list of >1 IDs using comma (',') as a delimiter",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "variation_calling_algorithm",
               "label" : "Name of variation calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            },
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "matched_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "meth_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "DNA Methylation (meth) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^mirna(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "mirna_seq",
               "label" : "Sequence of the miRNA",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "normalized_read_count",
               "label" : "Normalized count of sequencing reads if analyzed by sequencing platforms",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "raw_read_count",
               "label" : "Raw count of sequencing reads if analyzed by sequencing platforms",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "normalized_expression_level",
               "label" : "Normalized expression level",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "fold_change",
               "label" : "Expressed fold change if differential expression is measured",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "reference_sample_id",
               "label" : "ID of the reference sample if differential expression is measured",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "is_annotated",
               "label" : "Indicate if the mutation/variation is annotated in dbSNP",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.is_annotated.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "mirna_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "mirna_p",
         "uniqueFields" : [],
         "label" : "miRNA Expression (mirna) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^mirna(?:__.*)?__s(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "mirna_seq",
               "label" : "Sequence of the miRNA",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome",
               "label" : "Name of the chromosome containing the mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_start",
               "label" : "Chromosome start position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_end",
               "label" : "Chromosome end position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome_strand",
               "label" : "Chromosome strand of referenced feature; use '1' for forward, '-1' for reverse",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "xref_mirbase_id",
               "label" : "Cross-reference to miRBase ID (e.g. has-let-7c) if available",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "mirna_seq"
               ],
               "other" : "mirna_p",
               "otherFields" : [
                  "mirna_seq"
               ]
            }
         ],
         "name" : "mirna_s",
         "uniqueFields" : [
            "mirna_seq",
            "chromosome",
            "chromosome_start",
            "chromosome_end",
            "chromosome_strand"
         ],
         "label" : "miRNA Expression (mirna) - Secondary Analysis File (s)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^mirna(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "normalization_algorithm",
               "label" : "Name of normalization algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "sequencing_strategy",
               "label" : "Sequencing technique intended for the analyzed sample library.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.sequencing_strategy.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "seq_coverage",
               "label" : "Sequence coverage if analyzed by sequencing platforms",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "mirna_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "miRNA Expression (mirna) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^pexp(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "antibody_id",
               "label" : "ID of the antibody probe used in expression platform",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "gene_name",
               "label" : "This element has been deprecated in favor of the more flexible 'db_xref'; For providing HGNC approved gene symbol or ID use the DB Xref syntax: 'HGNC:x' and please continue to populate in this field as well as in 'db_xref'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "gene_stable_id",
               "label" : "This element has been deprecated in favor of the more flexible 'db_xref'; For providing Ensembl gene or transcript annotation use the DB Xref syntax: 'Ensembl:ENSGxxx' and please continue to populate in this field as well as in 'db_xref'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "normalized_expression_level",
               "label" : "Normalized expression level",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "pexp_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "pexp_p",
         "uniqueFields" : [],
         "label" : "Protein Expression (pexp) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^pexp(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "pexp_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "Protein Expression (pexp) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^sgv(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "variant_id",
               "label" : "Unique identifier assigned to a single variant observation; must be unique within the scope of all data produced by a project",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "variant_type",
               "label" : "A controlled vocabulary term describing the type of the observed variant",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "sgv_p.0.variant_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome",
               "label" : "Name of the chromosome containing the mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "chromosome_start",
               "label" : "Chromosome start position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "chromosome_end",
               "label" : "Chromosome end position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome_strand",
               "label" : "Chromosome strand of referenced feature; use '1' for forward, '-1' for reverse",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "refsnp_allele",
               "label" : "RefSNP alleles from dbSNP (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "refsnp_strand",
               "label" : "Strand of RefSNP allele",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "reference_genome_allele",
               "label" : "Allele in the reference genome (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "control_genotype",
               "label" : "Genotype of the control sample (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)^[ACGTURYMKWSBDHVNX-]+/[ACGTURYMKWSBDHVNX-]+$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "tumour_genotype",
               "label" : "Genotype of the tumour sample (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)^[ACGTURYMKWSBDHVNX-]+/[ACGTURYMKWSBDHVNX-]+$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "expressed_allele",
               "label" : "For heterozygous SNPs, the dominant allele as revealed by RNA-seq, etc.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : true,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : true,
               "summaryType" : "AVERAGE",
               "name" : "read_count",
               "label" : "Average number of times the bases are covered by raw reads",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "is_annotated",
               "label" : "Indicate if the mutation/variation is annotated in dbSNP",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.is_annotated.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "xref_ensembl_var_id",
               "label" : "Cross-reference: Ensembl Variation ID",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "(?iu)(ENSEMBL:)?rs\\d+|[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "sgv_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "sgv_p",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id",
            "variant_id"
         ],
         "label" : "Simple Germline Variation (sgv) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^sgv(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "matched_sample_id",
               "label" : "Unique identifier(s) for the matched sample(s) used in the analysis; must exist in the sample file; can provide a list of >1 IDs using comma (',') as a delimiter",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "variation_calling_algorithm",
               "label" : "Name of variation calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "sequencing_strategy",
               "label" : "Sequencing technique intended for the analyzed sample library.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.sequencing_strategy.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "AVERAGE",
               "name" : "seq_coverage",
               "label" : "Sequence coverage if analyzed by sequencing platforms",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            },
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "matched_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "sgv_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "Simple Germline Variation (sgv) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^ssm(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "mutation_id",
               "label" : "Unique identifier assigned to a single mutation observation; must be unique within the scope of all data produced by a project",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "mutation_type",
               "label" : "Type of mutation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "ssm_p.0.mutation_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome",
               "label" : "Name of the chromosome containing the mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_start",
               "label" : "Chromosome start position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "chromosome_end",
               "label" : "Chromosome end position of the feature being described; Base positions are numbered using HGVS recommendations and should be specified as integer values; An ambiguous position can be represented as an interval by using the following HGVS notation: '(start_end)'; see http://www.hgvs.org/mutnomen/recs.html",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chromosome_strand",
               "label" : "Chromosome strand of referenced feature; use '1' for forward, '-1' for reverse",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "refsnp_allele",
               "label" : "RefSNP alleles from dbSNP (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "refsnp_strand",
               "label" : "Strand of RefSNP allele",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "reference_genome_allele",
               "label" : "Allele in the reference genome (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "control_genotype",
               "label" : "Genotype of the control sample (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)^[ACGTURYMKWSBDHVNX-]+/[ACGTURYMKWSBDHVNX-]+$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "tumour_genotype",
               "label" : "Genotype of the tumour sample (use a dash for each missing base)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)^[ACGTURYMKWSBDHVNX-]+/[ACGTURYMKWSBDHVNX-]+$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "mutation",
               "label" : "Mutation, e.g. C>G",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)^[ACGTURYMKWSBDHVNX-]+\\s*>\\s*[ACGTURYMKWSBDHVNX-]+$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "expressed_allele",
               "label" : "For heterozygous SNPs, the dominant allele as revealed by RNA-seq, etc.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "read_count",
               "label" : "Average number of times the bases are covered by raw reads",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "is_annotated",
               "label" : "Indicate if the mutation/variation is annotated in dbSNP",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.is_annotated.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "xref_ensembl_var_id",
               "label" : "Cross-reference: Ensembl Variation ID",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "(?iu)(ENSEMBL:)?rs\\d+|[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "ssm_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "ssm_p",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id",
            "mutation_id"
         ],
         "label" : "Simple Somatic Mutations (ssm) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^ssm(?:__.*)?__s(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "mutation_id",
               "label" : "Unique identifier assigned to a single mutation observation; must be unique within the scope of all data produced by a project",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "consequence_type",
               "label" : "Functional consequence of the SNP.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "aa_mutation",
               "label" : "Changes at amino acid level. Indicate the reference aa, position and mutation aa.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "(?iu)^[ARNDCQEGHILKMFPSTWYVBZX*]+\\d+[ARNDCQEGHILKMFPSTWYVBZX*]+$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "cds_mutation",
               "label" : "Changes in coding sequence.  Indicate position, reference base and mutation base.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "(?iu)^\\d+[ACGTURYMKWSBDHVNX-]+>[ACGTURYMKWSBDHVNX-]+$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "protein_domain_affected",
               "label" : "Protein domain containing the mutation/variation.  Use Pfam accession.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "gene_affected",
               "label" : "Gene(s) containing the mutation/variation.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "transcript_affected",
               "label" : "Transcript(s) containing the mutation/variation.  Use Ensembl transcript id.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "mutation_id"
               ],
               "other" : "ssm_p",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "mutation_id"
               ]
            }
         ],
         "name" : "ssm_s",
         "uniqueFields" : [],
         "label" : "Simple Somatic Mutations (ssm) - Secondary Analysis File (s)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^ssm(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "matched_sample_id",
               "label" : "Unique identifier(s) for the matched sample(s) used in the analysis; must exist in the sample file; can provide a list of >1 IDs using comma (',') as a delimiter",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "variation_calling_algorithm",
               "label" : "Name of variation calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "sequencing_strategy",
               "label" : "Sequencing technique intended for the analyzed sample library.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.sequencing_strategy.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "seq_coverage",
               "label" : "Sequence coverage if analyzed by sequencing platforms",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            },
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "matched_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "ssm_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "Simple Somatic Mutations (ssm) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^stsm(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "sv_id",
               "label" : "A unique identifier assigned to a particular structural variant observation (one ID per event).",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "placement",
               "label" : "Ordering of breakpoint pairs within a single structural change event",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "annotation",
               "label" : "Annotation describing sequence mutation/variation based on breakpoint pairs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "interpreted_annotation",
               "label" : "HGVS nomenclature for description of sequence mutation/variation. E.g. chr3:g.1234567-2345678inv.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "variant_type",
               "label" : "Type of mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "stsm_p.0.variant_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chr_from",
               "label" : "Name of the donor chromosome containing the mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "chr_from_bkpt",
               "label" : "Breakpoint position of the mutation/variation on the donor chromosome",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chr_from_strand",
               "label" : "Donor chromome strand",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "chr_from_range",
               "label" : "Number of bases around chr_from_bkpt that may contain the real breakpoint",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "chr_from_flanking_seq",
               "label" : "Flanking sequences that are 200bp upstream and 200bp downstream to the chr_from_bkpt position.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chr_to",
               "label" : "Name of the acceptor chromosome containing the mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "chr_to_bkpt",
               "label" : "Breakpoint position of the mutation/variation on the acceptor chromosome",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "chr_to_strand",
               "label" : "Acceptor chromome strand",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "chr_to_range",
               "label" : "Number of bases around chr_to_bkpt that may contain the real breakpoint",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "chr_to_flanking_seq",
               "label" : "Flanking sequences that are 200bp upstream and 200bp downstream to the chr_to_bkpt position.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "microhomology_sequence",
               "label" : "If a microhomology is inserted, provide sequence",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "non_templated_sequence",
               "label" : "If non-templated DNA is inserted, provide sequence",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "evidence",
               "label" : "Evidence supporting a structural mutation/variation",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "stsm_p.0.evidence.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "zygosity",
               "label" : "Zygosity",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "stsm_p.0.zygosity.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "stsm_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "stsm_p",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id",
            "placement",
            "sv_id"
         ],
         "label" : "Structural Somatic Mutations (stsm) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^stsm(?:__.*)?__s(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "sv_id",
               "label" : "A unique identifier assigned to a particular structural variant observation (one ID per event).",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "placement",
               "label" : "Ordering of breakpoint pairs within a single structural change event",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "gene_affected_by_bkpt_from",
               "label" : "Transcript(s) affected by the breakpoints. Use Ensembl transcript id. Separate multiple transcripts from the same gene with commas, and separate transcripts from different genes with vertical bars. e.g.: transcriptA1,transcriptA2|transcriptB1|transcriptC1",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "gene_affected_by_bkpt_to",
               "label" : "Gene(s) affected by the breakpoints. Use Ensembl gene id. Separate multiple genes with vertical bars in the form of geneA|geneB|geneC. If both breakpoints affect genes, then use \"|\" to separate them. If no gene is affected, use -888 (not applicable).",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "transcript_affected_by_bkpt_from",
               "label" : "Transcript(s) affected by the breakpoints. Use Ensembl transcript id. Separate multiple transcripts from the same gene with commas, and separate transcripts from different genes with vertical bars. e.g.: transcriptA1,transcriptA2|transcriptB1|transcriptC1",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "transcript_affected_by_bkpt_to",
               "label" : "Transcript(s) affected by the breakpoints. Use Ensembl transcript id. Separate multiple transcripts from the same gene with commas, and separate transcripts from different genes with vertical bars. e.g.: transcriptA1,transcriptA2|transcriptB1|transcriptC1",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "bkpt_from_context",
               "label" : "Contextual description of the first break location (Exonic, Intronic, Intergenic)",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "bkpt_to_context",
               "label" : "Contextual description of the second break location (Exonic, Intronic, Intergenic)",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "sv_id",
                  "placement"
               ],
               "other" : "stsm_p",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "sv_id",
                  "placement"
               ]
            }
         ],
         "name" : "stsm_s",
         "uniqueFields" : [],
         "label" : "Structural Somatic Mutations (stsm) - Secondary Analysis File (s)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^stsm(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "matched_sample_id",
               "label" : "Unique identifier(s) for the matched sample(s) used in the analysis; must exist in the sample file; can provide a list of >1 IDs using comma (',') as a delimiter",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "variation_calling_algorithm",
               "label" : "Name of variation calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "sequencing_strategy",
               "label" : "Sequencing technique intended for the analyzed sample library.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.sequencing_strategy.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "seq_coverage",
               "label" : "Sequence coverage if analyzed by sequencing platforms",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            },
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "matched_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "stsm_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "Structural Somatic Mutations (stsm) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?biomarker(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "donor_id",
               "label" : "Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "specimen_id",
               "label" : "Unique identifier for a collected specimen assigned by data provider.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "biomarker_name",
               "label" : "Biomarker name",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "biomarker_threshold",
               "label" : "Threshold value for the biomarker for calling a result positive. Please include units.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "biomarker_positive",
               "label" : "Whether test is positive for named biomarker",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "biomarker.0.biomarker_positive.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "donor_id"
               ],
               "other" : "donor",
               "otherFields" : [
                  "donor_id"
               ]
            },
            {
               "bidirectional" : false,
               "optionals" : [
                  1
               ],
               "fields" : [
                  "donor_id",
                  "specimen_id"
               ],
               "other" : "specimen",
               "otherFields" : [
                  "donor_id",
                  "specimen_id"
               ]
            }
         ],
         "name" : "biomarker",
         "uniqueFields" : [],
         "label" : "Donor Biomarkers (biomarker)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?donor(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "donor_id",
               "label" : "Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "donor_sex",
               "label" : "Donor biological sex. 'Other' has been removed from the controlled vocabulary due to identifiability concerns.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "donor.0.donor_sex.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : "FREQUENCY",
               "name" : "donor_region_of_residence",
               "label" : "Country, and optionally state or province code, but not city.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "donor_vital_status",
               "label" : "Donor's last known vital status",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "donor.0.donor_vital_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "disease_status_last_followup",
               "label" : "Donor's last known disease status.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "donor.0.disease_status_last_followup.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "donor_relapse_type",
               "label" : "Type of relapse or progression (for liquid tumours), if applicable",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "donor.0.donor_relapse_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "donor_age_at_diagnosis",
               "label" : "Age at primary diagnosis.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "donor_age_at_enrollment",
               "label" : "Age at which first specimen was collected.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "donor_age_at_last_followup",
               "label" : "Age at last followup",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "donor_relapse_interval",
               "label" : "If donor was clinically disease free following primary therapy and relapse or progression (for liquid tumours) occurred, length of disease free interval, in days.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "donor_diagnosis_icd10",
               "label" : "ICD-10 diagnostic code",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "donor_tumour_staging_system_at_diagnosis",
               "label" : "Clinical staging system used at time of diagnosis, if determined. Note that this is supplementary to specimen's pathological staging.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "donor_tumour_stage_at_diagnosis",
               "label" : "Stage at diagnosis using indicated staging system. Note that this is supplementary to specimen's pathological staging. ",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "donor_tumour_stage_at_diagnosis_supplemental",
               "label" : "Optional additional staging provided as a comma-delimited list of 'staging system:stage'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "donor_survival_time",
               "label" : "How long has donor survived since primary diagnosis, in days. If source data was collected in months, use a multiplier value of '30.44' to convert value to days when preparing submission.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "donor_interval_of_last_followup",
               "label" : "Interval from primary diagnosis to last followup date. ICGC requests that patients be followed up every 6 months while alive.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "donor_notes",
               "label" : "Free text notes concerning donor",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [],
         "name" : "donor",
         "uniqueFields" : [
            "donor_id"
         ],
         "label" : "Donor Data File (donor)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^exp(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "normalization_algorithm",
               "label" : "Name of normalization algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "sequencing_strategy",
               "label" : "Sequencing technique intended for the analyzed sample library.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.sequencing_strategy.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "seq_coverage",
               "label" : "Sequence coverage if analyzed by sequencing platforms",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "exp_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "Gene Expression (exp) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?exposure(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "donor_id",
               "label" : "Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "exposure_type",
               "label" : "Type of exposure. This is a controlled vocabulary term to be developed by the submitting group.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "exposure_intensity",
               "label" : "Extent of the exposure. This is a controlled vocabulary term to be developed by the submitting group. Units to be specified by submitting group.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "exposure_notes",
               "label" : "Free text notes.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "donor_id"
               ],
               "other" : "donor",
               "otherFields" : [
                  "donor_id"
               ]
            }
         ],
         "name" : "exposure",
         "uniqueFields" : [],
         "label" : "Donor Exposure (exposure)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?family(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "donor_id",
               "label" : "Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "relationship_type",
               "label" : "Relationship to the donor",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "family.0.relationship_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "relationship_type_other",
               "label" : "If 'other' answered in previous column, specify the relationship type here",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "relationship_sex",
               "label" : "Biological sex of related individual",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "family.0.relationship_sex.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "relationship_age",
               "label" : "Age of relative at primary diagnosis (years)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "relationship_disease_icd10",
               "label" : "ICD-10 code for the relative's disease",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "relationship_disease",
               "label" : "Disease name",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "donor_id"
               ],
               "other" : "donor",
               "otherFields" : [
                  "donor_id"
               ]
            }
         ],
         "name" : "family",
         "uniqueFields" : [],
         "label" : "Donor Family (family)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^jcn(?:__.*)?__p(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "junction_id",
               "label" : "For known exons, use exonID1_exonID2 where exonID1 and exonID2 are Ensembl IDs of the 5' and 3' exons, respectively.  For novel or putative exons, use assemblyBuild_exon1chr_exon1end_exon2chr_exon2start where assemblyBuild is hg18 or hg19; exon1chr and exone2chr are the chromosomes of the 5' and 3' exons, respectively; exon1end is the end position of the 5'exon; exon2start is the start position of the 3'exon.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "gene_stable_id",
               "label" : "This element has been deprecated in favor of the more flexible 'db_xref'; For providing Ensembl gene or transcript annotation use the DB Xref syntax: 'Ensembl:ENSGxxx' and please continue to populate in this field as well as in 'db_xref'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "gene_chromosome",
               "label" : "Name of the chromosome containing the above gene.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "gene_strand",
               "label" : "Strand of the chromosome",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_start",
               "label" : "Start position of the entire gene on the chromosome as annotated in Ensembl",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_end",
               "label" : "End position of the entire gene on the chromosome as annotated in Ensembl",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "second_gene_stable_id",
               "label" : "In the case of a fusion gene, provide the Stable ID of the gene containing the 3' exon at the junction.  For annotated genes, use Ensembl gene ID.  For putative and novel genes, use assemblyBuild_chr_start_end where assemblyBuild can be hg18 or hg19.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "exon1_chromosome",
               "label" : "Name of the chromosome containing the 5' exon (#)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "exon1_number_bases",
               "label" : "Number of bases from 5' exon",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "exon1_end",
               "label" : "End position of the 5' exon on the chromosome",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "exon1_strand",
               "label" : "Chromsome strand of the 5' exon",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "exon2_chromosome",
               "label" : "Name of the chromosome containing the 3' exon (#)",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.chromosome.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "exon2_number_bases",
               "label" : "Number of bases from 3' exon",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "exon2_start",
               "label" : "Start position of the 3' exon on the chromosome",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "^(?:[0-9]+|\\([0-9]+_[0-9]+\\))$"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "exon2_strand",
               "label" : "Chromosome strand of the 3' exon",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "GLOBAL.0.strand.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "is_fusion_gene",
               "label" : "Indicate if the function is the result of a fusion gene",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "GLOBAL.0.yes_no.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "is_novel_splice_form",
               "label" : "Indicate if the splice form is novel",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "GLOBAL.0.yes_no.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "junction_seq",
               "label" : "Provide junction sequence if either is_fusion_gene or is_novel_splice_form is true",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "junction_type",
               "label" : "Type of junction",
               "restrictions" : [
                  {
                     "config" : {
                        "name" : "jcn_p.0.junction_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "junction_read_count",
               "label" : "Count of sequencing reads that span across exons",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "quality_score",
               "label" : "Quality score of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "probability",
               "label" : "Probability of the observation",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_status",
               "label" : "Indicate if the mutation/variation has been verified",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.verification_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "verification_platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ],
               "other" : "jcn_m",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "jcn_p",
         "uniqueFields" : [],
         "label" : "Splice Variation (jcn) - Primary Analysis File (p)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^jcn(?:__.*)?__m(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "assembly_version",
               "label" : "Version of human reference genome assembly used in the analysis; specify the version used in alignments, or associated with the particular platform used",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.assembly_version.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "platform",
               "label" : "Identifier of platform or technology used for analysis or verification; identifier should be taken from controlled vocabulary list of platforms recognized by the DCC and should directly correspond to the particular technology (including version) used. If no appropriate term exists for a given platform, please contact the DCC to request an addition to the CV terms.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.platform.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "experimental_protocol",
               "label" : "Name of experimental protocol and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "base_calling_algorithm",
               "label" : "Name of base calling algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "alignment_algorithm",
               "label" : "Name of alignment algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "normalization_algorithm",
               "label" : "Name of normalization algorithm and URL to written protocol",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : ".*([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?.*"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "other_analysis_algorithm",
               "label" : "Names of other analysis algorithms.  Separate multiple algorithms by commas.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "sequencing_strategy",
               "label" : "Sequencing technique intended for the analyzed sample library.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.sequencing_strategy.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "seq_coverage",
               "label" : "Sequence coverage if analyzed by sequencing platforms",
               "restrictions" : [],
               "valueType" : "DECIMAL"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_repository",
               "label" : "Public repository where raw data is submitted",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.raw_data_repository.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "raw_data_accession",
               "label" : "Accession and URL for referencing the raw data at the public repository",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "pattern" : "(?iu)(EGA:)?EGA[DNS]\\d+|(GEO:)?G(SE|DS|SM)\\d+|([A-Z0-9_-]{2,}:)?[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analyzed_sample_id"
               ],
               "other" : "sample",
               "otherFields" : [
                  "analyzed_sample_id"
               ]
            }
         ],
         "name" : "jcn_m",
         "uniqueFields" : [
            "analysis_id",
            "analyzed_sample_id"
         ],
         "label" : "Splice Variation (jcn) - Analysis Metadata File (m)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^meth(?:__.*)?__s(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analysis_id",
               "label" : "Unique identifier assigned to a computational analysis run that was performed on a single analyzed sample and any associated matched samples using a particular set of methods, tools, etc.; analysis IDs must be unique and must not be reused by a project across subsequent analysis runs",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "methylated_fragment_id",
               "label" : "A unique identifier associated with the fragment interrogated by the methylation analysis; provide platform-specific identifier if available",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "gene_affected",
               "label" : "Gene(s) containing the mutation/variation.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "gene_build_version",
               "label" : "Gene build version associated with the platform, tools or other methods used in the analysis; Supports the following syntax: 'DB:VERSION', eg: 'Ensembl:66'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "note",
               "label" : "Optional field to leave notes",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "methylated_fragment_id"
               ],
               "other" : "meth_p",
               "otherFields" : [
                  "analysis_id",
                  "analyzed_sample_id",
                  "methylated_fragment_id"
               ]
            }
         ],
         "name" : "meth_s",
         "uniqueFields" : [],
         "label" : "DNA Methylation (meth) - Secondary Analysis File (s)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?sample(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "analyzed_sample_id",
               "label" : "A unique identifier representing the particular sample that was analyzed; analyzed sample identifiers must be used consistently to relate those described in the sample file and in the related analysis files",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "specimen_id",
               "label" : "Unique identifier for a collected specimen assigned by data provider.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "analyzed_sample_type",
               "label" : "Controlled vocabulary description of sample type.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "sample.0.analyzed_sample_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "analyzed_sample_type_other",
               "label" : "Free text description of site of sample if 'other' was specified in sample_type field.",
               "restrictions" : [],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "analyzed_sample_interval",
               "label" : "Interval from specimen acquisition to sample use in an analytic procedure (e.g. DNA extraction), in days",
               "restrictions" : [],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "analyzed_sample_notes",
               "label" : "Freetext notes about sample allowed",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "specimen_id"
               ],
               "other" : "specimen",
               "otherFields" : [
                  "specimen_id"
               ]
            }
         ],
         "name" : "sample",
         "uniqueFields" : [
            "analyzed_sample_id"
         ],
         "label" : "Analyzed Sample Data File (sample)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?specimen(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "donor_id",
               "label" : "Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "specimen_id",
               "label" : "Unique identifier for a collected specimen assigned by data provider.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "specimen_type",
               "label" : "Controlled vocabulary description of specimen type.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "specimen.0.specimen_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "specimen_type_other",
               "label" : "Free text description of site of specimen if 'normal control (other)' or 'tumour (other)' was specified in specimen_type field.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "specimen_interval",
               "label" : "Interval between primary diagnosis and specimen acquisition, in days",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "specimen_donor_treatment_type",
               "label" : "Type of treatment the donor received prior to specimen acquisition.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "specimen.0.specimen_donor_treatment_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "specimen_donor_treatment_type_other",
               "label" : "If 'other' therapy indicated in previous column, describe it here. eg: molecular",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "specimen_processing",
               "label" : "Description of technique used to process specimen",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "specimen.0.specimen_processing.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "specimen_processing_other",
               "label" : "If 'other' specified for specimen_processing, may indicate technique here.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "specimen_storage",
               "label" : "Description of how specimen was stored. For specimens that were extracted freshly or immediately cultured, answer (1) 'NA'.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "specimen.0.specimen_storage.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "specimen_storage_other",
               "label" : "If 'other' specified for specimen_storage, may indicate technique here.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "tumour_confirmed",
               "label" : "Whether tumour was confirmed in the specimen by histological examination.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.yes_no.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "specimen_biobank",
               "label" : "If the specimen was obtained from a biobank, provide the biobank name here",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "specimen_biobank_id",
               "label" : "If the specimen was obtained from a biobank, provide the biobank accession number here.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "specimen_available",
               "label" : "Whether additional tissue is available for followup studies.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "GLOBAL.0.yes_no.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "tumour_histological_type",
               "label" : "'WHO International Histological Classification of Tumours' code",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "tumour_grading_system",
               "label" : "Name of tumour grading system",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "tumour_grade",
               "label" : "Tumour grade using indicated grading system",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "tumour_grade_supplemental",
               "label" : "Optional additional grading provided as a comma-delimited list of 'grading system:grade'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "tumour_stage_system",
               "label" : "Name of tumour staging system used ",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "tumour_stage",
               "label" : "Pathological tumour stage value using indicated staging system",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "tumour_stage_supplemental",
               "label" : "Optional additional staging provided as a comma-delimited list of 'staging system:stage'",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : null,
               "name" : "digital_image_of_stained_section",
               "label" : "Linkout(s) to digital image of a stained section, demonstrating a representative section of tumour",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "specimen_notes",
               "label" : "Free text notes allowed",
               "restrictions" : [],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : true,
               "optionals" : [],
               "fields" : [
                  "donor_id"
               ],
               "other" : "donor",
               "otherFields" : [
                  "donor_id"
               ]
            }
         ],
         "name" : "specimen",
         "uniqueFields" : [
            "specimen_id"
         ],
         "label" : "Specimen Data File (specimen)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?surgery(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "donor_id",
               "label" : "Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "procedure_interval",
               "label" : "Interval between primary diagnosis and procedure, in days",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "procedure_type",
               "label" : "Controlled vocabulary description of the procedure type. Vocabulary can be extended by disease-specific projects. Prefix extensions with 3-digit center code, e.g. 008.1 Beijing Cancer Hospital, fine needle aspiration of primary",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "surgery.0.procedure_type.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "procedure_site",
               "label" : "Anatomical site of the procedure. This must use a standard controlled vocabulary which should be reported in advance to the DCC.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "resection_status",
               "label" : "For resection procedures, an indication of the extent of residual disease.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "surgery.0.resection_status.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "specimen_id",
               "label" : "ID of ICGC specimen resulting from procedure. If present, must match specimen_id in specimen data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "donor_id"
               ],
               "other" : "donor",
               "otherFields" : [
                  "donor_id"
               ]
            },
            {
               "bidirectional" : false,
               "optionals" : [
                  1
               ],
               "fields" : [
                  "donor_id",
                  "specimen_id"
               ],
               "other" : "specimen",
               "otherFields" : [
                  "donor_id",
                  "specimen_id"
               ]
            }
         ],
         "name" : "surgery",
         "uniqueFields" : [],
         "label" : "Donor Surgery (surgery)",
         "role" : "SUBMISSION"
      },
      {
         "pattern" : "^(?:.*__)?therapy(?:__.*)?\\.txt(?:\\.lzo|\\.gz|\\.bz2)?$",
         "fields" : [
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "donor_id",
               "label" : "Unique identifier for the donor; assigned by data provider. It must be coded, and correspond to a donor ID listed in the donor data file.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "therapy_start_interval",
               "label" : "Interval between primary diagnosis and initiation of therapy, in days",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "AVERAGE",
               "name" : "therapy_duration",
               "label" : "Duration of therapy, in days",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "INTEGER"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "therapy_type",
               "label" : "Name of therapy",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "therapy_response",
               "label" : "What was the clinical effect of the therapy?",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : false
                     },
                     "type" : "required"
                  },
                  {
                     "config" : {
                        "name" : "therapy.0.therapy_response.v1"
                     },
                     "type" : "codelist"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : true,
               "summaryType" : null,
               "name" : "therapy_notes",
               "label" : "Further description of therapy, such as dosing schedule.",
               "restrictions" : [
                  {
                     "config" : {
                        "acceptMissingCode" : true
                     },
                     "type" : "required"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "UNIQUE_COUNT",
               "name" : "uri",
               "label" : "Provide one or more URIs that are related to the data provided; Use URL-encoding for special characters, and delimit multiple URIs with a comma.",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            },
            {
               "controlled" : false,
               "summaryType" : "FREQUENCY",
               "name" : "db_xref",
               "label" : "Provide one or more related public database identifier cross-references in the format: 'DB:ID', where DB is defined database token and ID is the identifier in that database. For example, to annotate with one (or more) Ensembl gene IDs use the syntax: 'Ensembl:ENSGxxx'. Use comma ',' as a delimiter for lists of >1 xrefs. See: http://www.ncbi.nlm.nih.gov/genbank/collab/db_xref/",
               "restrictions" : [
                  {
                     "config" : {
                        "pattern" : "^[A-Z0-9_-]{2,}:[\\w-]+"
                     },
                     "type" : "regex"
                  }
               ],
               "valueType" : "TEXT"
            }
         ],
         "relations" : [
            {
               "bidirectional" : false,
               "optionals" : [],
               "fields" : [
                  "donor_id"
               ],
               "other" : "donor",
               "otherFields" : [
                  "donor_id"
               ]
            }
         ],
         "name" : "therapy",
         "uniqueFields" : [],
         "label" : "Donor Therapy (therapy)",
         "role" : "SUBMISSION"
      }
   ],
   "version" : "0.6d",
   "state" : "OPENED"
}
